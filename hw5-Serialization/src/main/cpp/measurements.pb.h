// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: measurements.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_measurements_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_measurements_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_measurements_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_measurements_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_measurements_2eproto;
namespace esw {
class PAverage;
struct PAverageDefaultTypeInternal;
extern PAverageDefaultTypeInternal _PAverage_default_instance_;
class PMeasurementInfo;
struct PMeasurementInfoDefaultTypeInternal;
extern PMeasurementInfoDefaultTypeInternal _PMeasurementInfo_default_instance_;
class PMeasurementsRequest;
struct PMeasurementsRequestDefaultTypeInternal;
extern PMeasurementsRequestDefaultTypeInternal _PMeasurementsRequest_default_instance_;
class PMeasurementsResponse;
struct PMeasurementsResponseDefaultTypeInternal;
extern PMeasurementsResponseDefaultTypeInternal _PMeasurementsResponse_default_instance_;
class PRecords;
struct PRecordsDefaultTypeInternal;
extern PRecordsDefaultTypeInternal _PRecords_default_instance_;
class PRequestTuple;
struct PRequestTupleDefaultTypeInternal;
extern PRequestTupleDefaultTypeInternal _PRequestTuple_default_instance_;
class PResponseTuple;
struct PResponseTupleDefaultTypeInternal;
extern PResponseTupleDefaultTypeInternal _PResponseTuple_default_instance_;
}  // namespace esw
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace esw {

// ===================================================================


// -------------------------------------------------------------------

class PMeasurementInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:esw.PMeasurementInfo) */ {
 public:
  inline PMeasurementInfo() : PMeasurementInfo(nullptr) {}
  ~PMeasurementInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PMeasurementInfo(::google::protobuf::internal::ConstantInitialized);

  PMeasurementInfo(const PMeasurementInfo& from);
  PMeasurementInfo(PMeasurementInfo&& from) noexcept
    : PMeasurementInfo() {
    *this = ::std::move(from);
  }

  inline PMeasurementInfo& operator=(const PMeasurementInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PMeasurementInfo& operator=(PMeasurementInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PMeasurementInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const PMeasurementInfo* internal_default_instance() {
    return reinterpret_cast<const PMeasurementInfo*>(
               &_PMeasurementInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PMeasurementInfo& a, PMeasurementInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(PMeasurementInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PMeasurementInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PMeasurementInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PMeasurementInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PMeasurementInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PMeasurementInfo& from) {
    PMeasurementInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PMeasurementInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "esw.PMeasurementInfo";
  }
  protected:
  explicit PMeasurementInfo(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMeasurerNameFieldNumber = 3,
    kTimestampFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // string measurerName = 3;
  void clear_measurername() ;
  const std::string& measurername() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_measurername(Arg_&& arg, Args_... args);
  std::string* mutable_measurername();
  PROTOBUF_NODISCARD std::string* release_measurername();
  void set_allocated_measurername(std::string* ptr);

  private:
  const std::string& _internal_measurername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_measurername(
      const std::string& value);
  std::string* _internal_mutable_measurername();

  public:
  // int64 timestamp = 2;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:esw.PMeasurementInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 41, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr measurername_;
    ::int64_t timestamp_;
    ::int32_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_measurements_2eproto;
};// -------------------------------------------------------------------

class PRecords final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:esw.PRecords) */ {
 public:
  inline PRecords() : PRecords(nullptr) {}
  ~PRecords() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PRecords(::google::protobuf::internal::ConstantInitialized);

  PRecords(const PRecords& from);
  PRecords(PRecords&& from) noexcept
    : PRecords() {
    *this = ::std::move(from);
  }

  inline PRecords& operator=(const PRecords& from) {
    CopyFrom(from);
    return *this;
  }
  inline PRecords& operator=(PRecords&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PRecords& default_instance() {
    return *internal_default_instance();
  }
  static inline const PRecords* internal_default_instance() {
    return reinterpret_cast<const PRecords*>(
               &_PRecords_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PRecords& a, PRecords& b) {
    a.Swap(&b);
  }
  inline void Swap(PRecords* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PRecords* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PRecords* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PRecords>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PRecords& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PRecords& from) {
    PRecords::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PRecords* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "esw.PRecords";
  }
  protected:
  explicit PRecords(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDownloadFieldNumber = 1,
    kUploadFieldNumber = 2,
    kPingFieldNumber = 3,
  };
  // repeated double Download = 1;
  int download_size() const;
  private:
  int _internal_download_size() const;

  public:
  void clear_download() ;
  double download(int index) const;
  void set_download(int index, double value);
  void add_download(double value);
  const ::google::protobuf::RepeatedField<double>& download() const;
  ::google::protobuf::RepeatedField<double>* mutable_download();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_download() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_download();

  public:
  // repeated double Upload = 2;
  int upload_size() const;
  private:
  int _internal_upload_size() const;

  public:
  void clear_upload() ;
  double upload(int index) const;
  void set_upload(int index, double value);
  void add_upload(double value);
  const ::google::protobuf::RepeatedField<double>& upload() const;
  ::google::protobuf::RepeatedField<double>* mutable_upload();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_upload() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_upload();

  public:
  // repeated double Ping = 3;
  int ping_size() const;
  private:
  int _internal_ping_size() const;

  public:
  void clear_ping() ;
  double ping(int index) const;
  void set_ping(int index, double value);
  void add_ping(double value);
  const ::google::protobuf::RepeatedField<double>& ping() const;
  ::google::protobuf::RepeatedField<double>* mutable_ping();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_ping() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_ping();

  public:
  // @@protoc_insertion_point(class_scope:esw.PRecords)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<double> download_;
    ::google::protobuf::RepeatedField<double> upload_;
    ::google::protobuf::RepeatedField<double> ping_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_measurements_2eproto;
};// -------------------------------------------------------------------

class PRequestTuple final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:esw.PRequestTuple) */ {
 public:
  inline PRequestTuple() : PRequestTuple(nullptr) {}
  ~PRequestTuple() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PRequestTuple(::google::protobuf::internal::ConstantInitialized);

  PRequestTuple(const PRequestTuple& from);
  PRequestTuple(PRequestTuple&& from) noexcept
    : PRequestTuple() {
    *this = ::std::move(from);
  }

  inline PRequestTuple& operator=(const PRequestTuple& from) {
    CopyFrom(from);
    return *this;
  }
  inline PRequestTuple& operator=(PRequestTuple&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PRequestTuple& default_instance() {
    return *internal_default_instance();
  }
  static inline const PRequestTuple* internal_default_instance() {
    return reinterpret_cast<const PRequestTuple*>(
               &_PRequestTuple_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PRequestTuple& a, PRequestTuple& b) {
    a.Swap(&b);
  }
  inline void Swap(PRequestTuple* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PRequestTuple* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PRequestTuple* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PRequestTuple>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PRequestTuple& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PRequestTuple& from) {
    PRequestTuple::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PRequestTuple* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "esw.PRequestTuple";
  }
  protected:
  explicit PRequestTuple(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMeasurementInfoFieldNumber = 1,
    kRecordsFieldNumber = 2,
  };
  // .esw.PMeasurementInfo measurementInfo = 1;
  bool has_measurementinfo() const;
  void clear_measurementinfo() ;
  const ::esw::PMeasurementInfo& measurementinfo() const;
  PROTOBUF_NODISCARD ::esw::PMeasurementInfo* release_measurementinfo();
  ::esw::PMeasurementInfo* mutable_measurementinfo();
  void set_allocated_measurementinfo(::esw::PMeasurementInfo* value);
  void unsafe_arena_set_allocated_measurementinfo(::esw::PMeasurementInfo* value);
  ::esw::PMeasurementInfo* unsafe_arena_release_measurementinfo();

  private:
  const ::esw::PMeasurementInfo& _internal_measurementinfo() const;
  ::esw::PMeasurementInfo* _internal_mutable_measurementinfo();

  public:
  // .esw.PRecords records = 2;
  bool has_records() const;
  void clear_records() ;
  const ::esw::PRecords& records() const;
  PROTOBUF_NODISCARD ::esw::PRecords* release_records();
  ::esw::PRecords* mutable_records();
  void set_allocated_records(::esw::PRecords* value);
  void unsafe_arena_set_allocated_records(::esw::PRecords* value);
  ::esw::PRecords* unsafe_arena_release_records();

  private:
  const ::esw::PRecords& _internal_records() const;
  ::esw::PRecords* _internal_mutable_records();

  public:
  // @@protoc_insertion_point(class_scope:esw.PRequestTuple)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::esw::PMeasurementInfo* measurementinfo_;
    ::esw::PRecords* records_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_measurements_2eproto;
};// -------------------------------------------------------------------

class PMeasurementsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:esw.PMeasurementsRequest) */ {
 public:
  inline PMeasurementsRequest() : PMeasurementsRequest(nullptr) {}
  ~PMeasurementsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PMeasurementsRequest(::google::protobuf::internal::ConstantInitialized);

  PMeasurementsRequest(const PMeasurementsRequest& from);
  PMeasurementsRequest(PMeasurementsRequest&& from) noexcept
    : PMeasurementsRequest() {
    *this = ::std::move(from);
  }

  inline PMeasurementsRequest& operator=(const PMeasurementsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PMeasurementsRequest& operator=(PMeasurementsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PMeasurementsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PMeasurementsRequest* internal_default_instance() {
    return reinterpret_cast<const PMeasurementsRequest*>(
               &_PMeasurementsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PMeasurementsRequest& a, PMeasurementsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PMeasurementsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PMeasurementsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PMeasurementsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PMeasurementsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PMeasurementsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PMeasurementsRequest& from) {
    PMeasurementsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PMeasurementsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "esw.PMeasurementsRequest";
  }
  protected:
  explicit PMeasurementsRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestTupleFieldNumber = 1,
  };
  // repeated .esw.PRequestTuple requestTuple = 1;
  int requesttuple_size() const;
  private:
  int _internal_requesttuple_size() const;

  public:
  void clear_requesttuple() ;
  ::esw::PRequestTuple* mutable_requesttuple(int index);
  ::google::protobuf::RepeatedPtrField< ::esw::PRequestTuple >*
      mutable_requesttuple();
  private:
  const ::google::protobuf::RepeatedPtrField<::esw::PRequestTuple>& _internal_requesttuple() const;
  ::google::protobuf::RepeatedPtrField<::esw::PRequestTuple>* _internal_mutable_requesttuple();
  public:
  const ::esw::PRequestTuple& requesttuple(int index) const;
  ::esw::PRequestTuple* add_requesttuple();
  const ::google::protobuf::RepeatedPtrField< ::esw::PRequestTuple >&
      requesttuple() const;
  // @@protoc_insertion_point(class_scope:esw.PMeasurementsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::esw::PRequestTuple > requesttuple_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_measurements_2eproto;
};// -------------------------------------------------------------------

class PAverage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:esw.PAverage) */ {
 public:
  inline PAverage() : PAverage(nullptr) {}
  ~PAverage() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PAverage(::google::protobuf::internal::ConstantInitialized);

  PAverage(const PAverage& from);
  PAverage(PAverage&& from) noexcept
    : PAverage() {
    *this = ::std::move(from);
  }

  inline PAverage& operator=(const PAverage& from) {
    CopyFrom(from);
    return *this;
  }
  inline PAverage& operator=(PAverage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PAverage& default_instance() {
    return *internal_default_instance();
  }
  static inline const PAverage* internal_default_instance() {
    return reinterpret_cast<const PAverage*>(
               &_PAverage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PAverage& a, PAverage& b) {
    a.Swap(&b);
  }
  inline void Swap(PAverage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PAverage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PAverage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PAverage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PAverage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PAverage& from) {
    PAverage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PAverage* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "esw.PAverage";
  }
  protected:
  explicit PAverage(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDownloadFieldNumber = 1,
    kUploadFieldNumber = 2,
    kPingFieldNumber = 3,
  };
  // double Download = 1;
  void clear_download() ;
  double download() const;
  void set_download(double value);

  private:
  double _internal_download() const;
  void _internal_set_download(double value);

  public:
  // double Upload = 2;
  void clear_upload() ;
  double upload() const;
  void set_upload(double value);

  private:
  double _internal_upload() const;
  void _internal_set_upload(double value);

  public:
  // double Ping = 3;
  void clear_ping() ;
  double ping() const;
  void set_ping(double value);

  private:
  double _internal_ping() const;
  void _internal_set_ping(double value);

  public:
  // @@protoc_insertion_point(class_scope:esw.PAverage)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double download_;
    double upload_;
    double ping_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_measurements_2eproto;
};// -------------------------------------------------------------------

class PResponseTuple final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:esw.PResponseTuple) */ {
 public:
  inline PResponseTuple() : PResponseTuple(nullptr) {}
  ~PResponseTuple() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PResponseTuple(::google::protobuf::internal::ConstantInitialized);

  PResponseTuple(const PResponseTuple& from);
  PResponseTuple(PResponseTuple&& from) noexcept
    : PResponseTuple() {
    *this = ::std::move(from);
  }

  inline PResponseTuple& operator=(const PResponseTuple& from) {
    CopyFrom(from);
    return *this;
  }
  inline PResponseTuple& operator=(PResponseTuple&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PResponseTuple& default_instance() {
    return *internal_default_instance();
  }
  static inline const PResponseTuple* internal_default_instance() {
    return reinterpret_cast<const PResponseTuple*>(
               &_PResponseTuple_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(PResponseTuple& a, PResponseTuple& b) {
    a.Swap(&b);
  }
  inline void Swap(PResponseTuple* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PResponseTuple* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PResponseTuple* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PResponseTuple>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PResponseTuple& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PResponseTuple& from) {
    PResponseTuple::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PResponseTuple* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "esw.PResponseTuple";
  }
  protected:
  explicit PResponseTuple(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMeasurementInfoFieldNumber = 1,
    kAverageFieldNumber = 2,
  };
  // .esw.PMeasurementInfo measurementInfo = 1;
  bool has_measurementinfo() const;
  void clear_measurementinfo() ;
  const ::esw::PMeasurementInfo& measurementinfo() const;
  PROTOBUF_NODISCARD ::esw::PMeasurementInfo* release_measurementinfo();
  ::esw::PMeasurementInfo* mutable_measurementinfo();
  void set_allocated_measurementinfo(::esw::PMeasurementInfo* value);
  void unsafe_arena_set_allocated_measurementinfo(::esw::PMeasurementInfo* value);
  ::esw::PMeasurementInfo* unsafe_arena_release_measurementinfo();

  private:
  const ::esw::PMeasurementInfo& _internal_measurementinfo() const;
  ::esw::PMeasurementInfo* _internal_mutable_measurementinfo();

  public:
  // .esw.PAverage average = 2;
  bool has_average() const;
  void clear_average() ;
  const ::esw::PAverage& average() const;
  PROTOBUF_NODISCARD ::esw::PAverage* release_average();
  ::esw::PAverage* mutable_average();
  void set_allocated_average(::esw::PAverage* value);
  void unsafe_arena_set_allocated_average(::esw::PAverage* value);
  ::esw::PAverage* unsafe_arena_release_average();

  private:
  const ::esw::PAverage& _internal_average() const;
  ::esw::PAverage* _internal_mutable_average();

  public:
  // @@protoc_insertion_point(class_scope:esw.PResponseTuple)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::esw::PMeasurementInfo* measurementinfo_;
    ::esw::PAverage* average_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_measurements_2eproto;
};// -------------------------------------------------------------------

class PMeasurementsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:esw.PMeasurementsResponse) */ {
 public:
  inline PMeasurementsResponse() : PMeasurementsResponse(nullptr) {}
  ~PMeasurementsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PMeasurementsResponse(::google::protobuf::internal::ConstantInitialized);

  PMeasurementsResponse(const PMeasurementsResponse& from);
  PMeasurementsResponse(PMeasurementsResponse&& from) noexcept
    : PMeasurementsResponse() {
    *this = ::std::move(from);
  }

  inline PMeasurementsResponse& operator=(const PMeasurementsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PMeasurementsResponse& operator=(PMeasurementsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PMeasurementsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PMeasurementsResponse* internal_default_instance() {
    return reinterpret_cast<const PMeasurementsResponse*>(
               &_PMeasurementsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(PMeasurementsResponse& a, PMeasurementsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PMeasurementsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PMeasurementsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PMeasurementsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PMeasurementsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PMeasurementsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PMeasurementsResponse& from) {
    PMeasurementsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PMeasurementsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "esw.PMeasurementsResponse";
  }
  protected:
  explicit PMeasurementsResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseTupleFieldNumber = 1,
  };
  // repeated .esw.PResponseTuple responseTuple = 1;
  int responsetuple_size() const;
  private:
  int _internal_responsetuple_size() const;

  public:
  void clear_responsetuple() ;
  ::esw::PResponseTuple* mutable_responsetuple(int index);
  ::google::protobuf::RepeatedPtrField< ::esw::PResponseTuple >*
      mutable_responsetuple();
  private:
  const ::google::protobuf::RepeatedPtrField<::esw::PResponseTuple>& _internal_responsetuple() const;
  ::google::protobuf::RepeatedPtrField<::esw::PResponseTuple>* _internal_mutable_responsetuple();
  public:
  const ::esw::PResponseTuple& responsetuple(int index) const;
  ::esw::PResponseTuple* add_responsetuple();
  const ::google::protobuf::RepeatedPtrField< ::esw::PResponseTuple >&
      responsetuple() const;
  // @@protoc_insertion_point(class_scope:esw.PMeasurementsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::esw::PResponseTuple > responsetuple_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_measurements_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PMeasurementInfo

// int32 id = 1;
inline void PMeasurementInfo::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t PMeasurementInfo::id() const {
  // @@protoc_insertion_point(field_get:esw.PMeasurementInfo.id)
  return _internal_id();
}
inline void PMeasurementInfo::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:esw.PMeasurementInfo.id)
}
inline ::int32_t PMeasurementInfo::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void PMeasurementInfo::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// int64 timestamp = 2;
inline void PMeasurementInfo::clear_timestamp() {
  _impl_.timestamp_ = ::int64_t{0};
}
inline ::int64_t PMeasurementInfo::timestamp() const {
  // @@protoc_insertion_point(field_get:esw.PMeasurementInfo.timestamp)
  return _internal_timestamp();
}
inline void PMeasurementInfo::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:esw.PMeasurementInfo.timestamp)
}
inline ::int64_t PMeasurementInfo::_internal_timestamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timestamp_;
}
inline void PMeasurementInfo::_internal_set_timestamp(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timestamp_ = value;
}

// string measurerName = 3;
inline void PMeasurementInfo::clear_measurername() {
  _impl_.measurername_.ClearToEmpty();
}
inline const std::string& PMeasurementInfo::measurername() const {
  // @@protoc_insertion_point(field_get:esw.PMeasurementInfo.measurerName)
  return _internal_measurername();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PMeasurementInfo::set_measurername(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.measurername_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:esw.PMeasurementInfo.measurerName)
}
inline std::string* PMeasurementInfo::mutable_measurername() {
  std::string* _s = _internal_mutable_measurername();
  // @@protoc_insertion_point(field_mutable:esw.PMeasurementInfo.measurerName)
  return _s;
}
inline const std::string& PMeasurementInfo::_internal_measurername() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.measurername_.Get();
}
inline void PMeasurementInfo::_internal_set_measurername(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.measurername_.Set(value, GetArenaForAllocation());
}
inline std::string* PMeasurementInfo::_internal_mutable_measurername() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.measurername_.Mutable( GetArenaForAllocation());
}
inline std::string* PMeasurementInfo::release_measurername() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:esw.PMeasurementInfo.measurerName)
  return _impl_.measurername_.Release();
}
inline void PMeasurementInfo::set_allocated_measurername(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.measurername_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.measurername_.IsDefault()) {
          _impl_.measurername_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:esw.PMeasurementInfo.measurerName)
}

// -------------------------------------------------------------------

// PRecords

// repeated double Download = 1;
inline int PRecords::_internal_download_size() const {
  return _internal_download().size();
}
inline int PRecords::download_size() const {
  return _internal_download_size();
}
inline void PRecords::clear_download() {
  _internal_mutable_download()->Clear();
}
inline double PRecords::download(int index) const {
  // @@protoc_insertion_point(field_get:esw.PRecords.Download)
  return _internal_download().Get(index);
}
inline void PRecords::set_download(int index, double value) {
  _internal_mutable_download()->Set(index, value);
  // @@protoc_insertion_point(field_set:esw.PRecords.Download)
}
inline void PRecords::add_download(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_download()->Add(value);
  // @@protoc_insertion_point(field_add:esw.PRecords.Download)
}
inline const ::google::protobuf::RepeatedField<double>& PRecords::download() const {
  // @@protoc_insertion_point(field_list:esw.PRecords.Download)
  return _internal_download();
}
inline ::google::protobuf::RepeatedField<double>* PRecords::mutable_download() {
  // @@protoc_insertion_point(field_mutable_list:esw.PRecords.Download)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_download();
}

inline const ::google::protobuf::RepeatedField<double>& PRecords::_internal_download() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.download_;
}
inline ::google::protobuf::RepeatedField<double>* PRecords::_internal_mutable_download() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.download_;
}

// repeated double Upload = 2;
inline int PRecords::_internal_upload_size() const {
  return _internal_upload().size();
}
inline int PRecords::upload_size() const {
  return _internal_upload_size();
}
inline void PRecords::clear_upload() {
  _internal_mutable_upload()->Clear();
}
inline double PRecords::upload(int index) const {
  // @@protoc_insertion_point(field_get:esw.PRecords.Upload)
  return _internal_upload().Get(index);
}
inline void PRecords::set_upload(int index, double value) {
  _internal_mutable_upload()->Set(index, value);
  // @@protoc_insertion_point(field_set:esw.PRecords.Upload)
}
inline void PRecords::add_upload(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_upload()->Add(value);
  // @@protoc_insertion_point(field_add:esw.PRecords.Upload)
}
inline const ::google::protobuf::RepeatedField<double>& PRecords::upload() const {
  // @@protoc_insertion_point(field_list:esw.PRecords.Upload)
  return _internal_upload();
}
inline ::google::protobuf::RepeatedField<double>* PRecords::mutable_upload() {
  // @@protoc_insertion_point(field_mutable_list:esw.PRecords.Upload)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_upload();
}

inline const ::google::protobuf::RepeatedField<double>& PRecords::_internal_upload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.upload_;
}
inline ::google::protobuf::RepeatedField<double>* PRecords::_internal_mutable_upload() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.upload_;
}

// repeated double Ping = 3;
inline int PRecords::_internal_ping_size() const {
  return _internal_ping().size();
}
inline int PRecords::ping_size() const {
  return _internal_ping_size();
}
inline void PRecords::clear_ping() {
  _internal_mutable_ping()->Clear();
}
inline double PRecords::ping(int index) const {
  // @@protoc_insertion_point(field_get:esw.PRecords.Ping)
  return _internal_ping().Get(index);
}
inline void PRecords::set_ping(int index, double value) {
  _internal_mutable_ping()->Set(index, value);
  // @@protoc_insertion_point(field_set:esw.PRecords.Ping)
}
inline void PRecords::add_ping(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ping()->Add(value);
  // @@protoc_insertion_point(field_add:esw.PRecords.Ping)
}
inline const ::google::protobuf::RepeatedField<double>& PRecords::ping() const {
  // @@protoc_insertion_point(field_list:esw.PRecords.Ping)
  return _internal_ping();
}
inline ::google::protobuf::RepeatedField<double>* PRecords::mutable_ping() {
  // @@protoc_insertion_point(field_mutable_list:esw.PRecords.Ping)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ping();
}

inline const ::google::protobuf::RepeatedField<double>& PRecords::_internal_ping() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ping_;
}
inline ::google::protobuf::RepeatedField<double>* PRecords::_internal_mutable_ping() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ping_;
}

// -------------------------------------------------------------------

// PRequestTuple

// .esw.PMeasurementInfo measurementInfo = 1;
inline bool PRequestTuple::has_measurementinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.measurementinfo_ != nullptr);
  return value;
}
inline void PRequestTuple::clear_measurementinfo() {
  if (_impl_.measurementinfo_ != nullptr) _impl_.measurementinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::esw::PMeasurementInfo& PRequestTuple::_internal_measurementinfo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::esw::PMeasurementInfo* p = _impl_.measurementinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::esw::PMeasurementInfo&>(::esw::_PMeasurementInfo_default_instance_);
}
inline const ::esw::PMeasurementInfo& PRequestTuple::measurementinfo() const {
  // @@protoc_insertion_point(field_get:esw.PRequestTuple.measurementInfo)
  return _internal_measurementinfo();
}
inline void PRequestTuple::unsafe_arena_set_allocated_measurementinfo(::esw::PMeasurementInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.measurementinfo_);
  }
  _impl_.measurementinfo_ = reinterpret_cast<::esw::PMeasurementInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:esw.PRequestTuple.measurementInfo)
}
inline ::esw::PMeasurementInfo* PRequestTuple::release_measurementinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::esw::PMeasurementInfo* released = _impl_.measurementinfo_;
  _impl_.measurementinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::esw::PMeasurementInfo* PRequestTuple::unsafe_arena_release_measurementinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:esw.PRequestTuple.measurementInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::esw::PMeasurementInfo* temp = _impl_.measurementinfo_;
  _impl_.measurementinfo_ = nullptr;
  return temp;
}
inline ::esw::PMeasurementInfo* PRequestTuple::_internal_mutable_measurementinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.measurementinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::esw::PMeasurementInfo>(GetArenaForAllocation());
    _impl_.measurementinfo_ = reinterpret_cast<::esw::PMeasurementInfo*>(p);
  }
  return _impl_.measurementinfo_;
}
inline ::esw::PMeasurementInfo* PRequestTuple::mutable_measurementinfo() {
  ::esw::PMeasurementInfo* _msg = _internal_mutable_measurementinfo();
  // @@protoc_insertion_point(field_mutable:esw.PRequestTuple.measurementInfo)
  return _msg;
}
inline void PRequestTuple::set_allocated_measurementinfo(::esw::PMeasurementInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::esw::PMeasurementInfo*>(_impl_.measurementinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::esw::PMeasurementInfo*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.measurementinfo_ = reinterpret_cast<::esw::PMeasurementInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:esw.PRequestTuple.measurementInfo)
}

// .esw.PRecords records = 2;
inline bool PRequestTuple::has_records() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.records_ != nullptr);
  return value;
}
inline void PRequestTuple::clear_records() {
  if (_impl_.records_ != nullptr) _impl_.records_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::esw::PRecords& PRequestTuple::_internal_records() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::esw::PRecords* p = _impl_.records_;
  return p != nullptr ? *p : reinterpret_cast<const ::esw::PRecords&>(::esw::_PRecords_default_instance_);
}
inline const ::esw::PRecords& PRequestTuple::records() const {
  // @@protoc_insertion_point(field_get:esw.PRequestTuple.records)
  return _internal_records();
}
inline void PRequestTuple::unsafe_arena_set_allocated_records(::esw::PRecords* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.records_);
  }
  _impl_.records_ = reinterpret_cast<::esw::PRecords*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:esw.PRequestTuple.records)
}
inline ::esw::PRecords* PRequestTuple::release_records() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::esw::PRecords* released = _impl_.records_;
  _impl_.records_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::esw::PRecords* PRequestTuple::unsafe_arena_release_records() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:esw.PRequestTuple.records)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::esw::PRecords* temp = _impl_.records_;
  _impl_.records_ = nullptr;
  return temp;
}
inline ::esw::PRecords* PRequestTuple::_internal_mutable_records() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.records_ == nullptr) {
    auto* p = CreateMaybeMessage<::esw::PRecords>(GetArenaForAllocation());
    _impl_.records_ = reinterpret_cast<::esw::PRecords*>(p);
  }
  return _impl_.records_;
}
inline ::esw::PRecords* PRequestTuple::mutable_records() {
  ::esw::PRecords* _msg = _internal_mutable_records();
  // @@protoc_insertion_point(field_mutable:esw.PRequestTuple.records)
  return _msg;
}
inline void PRequestTuple::set_allocated_records(::esw::PRecords* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::esw::PRecords*>(_impl_.records_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::esw::PRecords*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.records_ = reinterpret_cast<::esw::PRecords*>(value);
  // @@protoc_insertion_point(field_set_allocated:esw.PRequestTuple.records)
}

// -------------------------------------------------------------------

// PMeasurementsRequest

// repeated .esw.PRequestTuple requestTuple = 1;
inline int PMeasurementsRequest::_internal_requesttuple_size() const {
  return _internal_requesttuple().size();
}
inline int PMeasurementsRequest::requesttuple_size() const {
  return _internal_requesttuple_size();
}
inline void PMeasurementsRequest::clear_requesttuple() {
  _internal_mutable_requesttuple()->Clear();
}
inline ::esw::PRequestTuple* PMeasurementsRequest::mutable_requesttuple(int index) {
  // @@protoc_insertion_point(field_mutable:esw.PMeasurementsRequest.requestTuple)
  return _internal_mutable_requesttuple()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::esw::PRequestTuple >*
PMeasurementsRequest::mutable_requesttuple() {
  // @@protoc_insertion_point(field_mutable_list:esw.PMeasurementsRequest.requestTuple)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_requesttuple();
}
inline const ::esw::PRequestTuple& PMeasurementsRequest::requesttuple(int index) const {
  // @@protoc_insertion_point(field_get:esw.PMeasurementsRequest.requestTuple)
    return _internal_requesttuple().Get(index);
}
inline ::esw::PRequestTuple* PMeasurementsRequest::add_requesttuple() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::esw::PRequestTuple* _add = _internal_mutable_requesttuple()->Add();
  // @@protoc_insertion_point(field_add:esw.PMeasurementsRequest.requestTuple)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::esw::PRequestTuple >&
PMeasurementsRequest::requesttuple() const {
  // @@protoc_insertion_point(field_list:esw.PMeasurementsRequest.requestTuple)
  return _internal_requesttuple();
}
inline const ::google::protobuf::RepeatedPtrField<::esw::PRequestTuple>&
PMeasurementsRequest::_internal_requesttuple() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.requesttuple_;
}
inline ::google::protobuf::RepeatedPtrField<::esw::PRequestTuple>*
PMeasurementsRequest::_internal_mutable_requesttuple() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.requesttuple_;
}

// -------------------------------------------------------------------

// PAverage

// double Download = 1;
inline void PAverage::clear_download() {
  _impl_.download_ = 0;
}
inline double PAverage::download() const {
  // @@protoc_insertion_point(field_get:esw.PAverage.Download)
  return _internal_download();
}
inline void PAverage::set_download(double value) {
  _internal_set_download(value);
  // @@protoc_insertion_point(field_set:esw.PAverage.Download)
}
inline double PAverage::_internal_download() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.download_;
}
inline void PAverage::_internal_set_download(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.download_ = value;
}

// double Upload = 2;
inline void PAverage::clear_upload() {
  _impl_.upload_ = 0;
}
inline double PAverage::upload() const {
  // @@protoc_insertion_point(field_get:esw.PAverage.Upload)
  return _internal_upload();
}
inline void PAverage::set_upload(double value) {
  _internal_set_upload(value);
  // @@protoc_insertion_point(field_set:esw.PAverage.Upload)
}
inline double PAverage::_internal_upload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.upload_;
}
inline void PAverage::_internal_set_upload(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.upload_ = value;
}

// double Ping = 3;
inline void PAverage::clear_ping() {
  _impl_.ping_ = 0;
}
inline double PAverage::ping() const {
  // @@protoc_insertion_point(field_get:esw.PAverage.Ping)
  return _internal_ping();
}
inline void PAverage::set_ping(double value) {
  _internal_set_ping(value);
  // @@protoc_insertion_point(field_set:esw.PAverage.Ping)
}
inline double PAverage::_internal_ping() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ping_;
}
inline void PAverage::_internal_set_ping(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ping_ = value;
}

// -------------------------------------------------------------------

// PResponseTuple

// .esw.PMeasurementInfo measurementInfo = 1;
inline bool PResponseTuple::has_measurementinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.measurementinfo_ != nullptr);
  return value;
}
inline void PResponseTuple::clear_measurementinfo() {
  if (_impl_.measurementinfo_ != nullptr) _impl_.measurementinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::esw::PMeasurementInfo& PResponseTuple::_internal_measurementinfo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::esw::PMeasurementInfo* p = _impl_.measurementinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::esw::PMeasurementInfo&>(::esw::_PMeasurementInfo_default_instance_);
}
inline const ::esw::PMeasurementInfo& PResponseTuple::measurementinfo() const {
  // @@protoc_insertion_point(field_get:esw.PResponseTuple.measurementInfo)
  return _internal_measurementinfo();
}
inline void PResponseTuple::unsafe_arena_set_allocated_measurementinfo(::esw::PMeasurementInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.measurementinfo_);
  }
  _impl_.measurementinfo_ = reinterpret_cast<::esw::PMeasurementInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:esw.PResponseTuple.measurementInfo)
}
inline ::esw::PMeasurementInfo* PResponseTuple::release_measurementinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::esw::PMeasurementInfo* released = _impl_.measurementinfo_;
  _impl_.measurementinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::esw::PMeasurementInfo* PResponseTuple::unsafe_arena_release_measurementinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:esw.PResponseTuple.measurementInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::esw::PMeasurementInfo* temp = _impl_.measurementinfo_;
  _impl_.measurementinfo_ = nullptr;
  return temp;
}
inline ::esw::PMeasurementInfo* PResponseTuple::_internal_mutable_measurementinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.measurementinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::esw::PMeasurementInfo>(GetArenaForAllocation());
    _impl_.measurementinfo_ = reinterpret_cast<::esw::PMeasurementInfo*>(p);
  }
  return _impl_.measurementinfo_;
}
inline ::esw::PMeasurementInfo* PResponseTuple::mutable_measurementinfo() {
  ::esw::PMeasurementInfo* _msg = _internal_mutable_measurementinfo();
  // @@protoc_insertion_point(field_mutable:esw.PResponseTuple.measurementInfo)
  return _msg;
}
inline void PResponseTuple::set_allocated_measurementinfo(::esw::PMeasurementInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::esw::PMeasurementInfo*>(_impl_.measurementinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::esw::PMeasurementInfo*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.measurementinfo_ = reinterpret_cast<::esw::PMeasurementInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:esw.PResponseTuple.measurementInfo)
}

// .esw.PAverage average = 2;
inline bool PResponseTuple::has_average() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.average_ != nullptr);
  return value;
}
inline void PResponseTuple::clear_average() {
  if (_impl_.average_ != nullptr) _impl_.average_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::esw::PAverage& PResponseTuple::_internal_average() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::esw::PAverage* p = _impl_.average_;
  return p != nullptr ? *p : reinterpret_cast<const ::esw::PAverage&>(::esw::_PAverage_default_instance_);
}
inline const ::esw::PAverage& PResponseTuple::average() const {
  // @@protoc_insertion_point(field_get:esw.PResponseTuple.average)
  return _internal_average();
}
inline void PResponseTuple::unsafe_arena_set_allocated_average(::esw::PAverage* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.average_);
  }
  _impl_.average_ = reinterpret_cast<::esw::PAverage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:esw.PResponseTuple.average)
}
inline ::esw::PAverage* PResponseTuple::release_average() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::esw::PAverage* released = _impl_.average_;
  _impl_.average_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::esw::PAverage* PResponseTuple::unsafe_arena_release_average() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:esw.PResponseTuple.average)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::esw::PAverage* temp = _impl_.average_;
  _impl_.average_ = nullptr;
  return temp;
}
inline ::esw::PAverage* PResponseTuple::_internal_mutable_average() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.average_ == nullptr) {
    auto* p = CreateMaybeMessage<::esw::PAverage>(GetArenaForAllocation());
    _impl_.average_ = reinterpret_cast<::esw::PAverage*>(p);
  }
  return _impl_.average_;
}
inline ::esw::PAverage* PResponseTuple::mutable_average() {
  ::esw::PAverage* _msg = _internal_mutable_average();
  // @@protoc_insertion_point(field_mutable:esw.PResponseTuple.average)
  return _msg;
}
inline void PResponseTuple::set_allocated_average(::esw::PAverage* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::esw::PAverage*>(_impl_.average_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::esw::PAverage*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.average_ = reinterpret_cast<::esw::PAverage*>(value);
  // @@protoc_insertion_point(field_set_allocated:esw.PResponseTuple.average)
}

// -------------------------------------------------------------------

// PMeasurementsResponse

// repeated .esw.PResponseTuple responseTuple = 1;
inline int PMeasurementsResponse::_internal_responsetuple_size() const {
  return _internal_responsetuple().size();
}
inline int PMeasurementsResponse::responsetuple_size() const {
  return _internal_responsetuple_size();
}
inline void PMeasurementsResponse::clear_responsetuple() {
  _internal_mutable_responsetuple()->Clear();
}
inline ::esw::PResponseTuple* PMeasurementsResponse::mutable_responsetuple(int index) {
  // @@protoc_insertion_point(field_mutable:esw.PMeasurementsResponse.responseTuple)
  return _internal_mutable_responsetuple()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::esw::PResponseTuple >*
PMeasurementsResponse::mutable_responsetuple() {
  // @@protoc_insertion_point(field_mutable_list:esw.PMeasurementsResponse.responseTuple)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_responsetuple();
}
inline const ::esw::PResponseTuple& PMeasurementsResponse::responsetuple(int index) const {
  // @@protoc_insertion_point(field_get:esw.PMeasurementsResponse.responseTuple)
    return _internal_responsetuple().Get(index);
}
inline ::esw::PResponseTuple* PMeasurementsResponse::add_responsetuple() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::esw::PResponseTuple* _add = _internal_mutable_responsetuple()->Add();
  // @@protoc_insertion_point(field_add:esw.PMeasurementsResponse.responseTuple)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::esw::PResponseTuple >&
PMeasurementsResponse::responsetuple() const {
  // @@protoc_insertion_point(field_list:esw.PMeasurementsResponse.responseTuple)
  return _internal_responsetuple();
}
inline const ::google::protobuf::RepeatedPtrField<::esw::PResponseTuple>&
PMeasurementsResponse::_internal_responsetuple() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.responsetuple_;
}
inline ::google::protobuf::RepeatedPtrField<::esw::PResponseTuple>*
PMeasurementsResponse::_internal_mutable_responsetuple() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.responsetuple_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace esw


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_measurements_2eproto_2epb_2eh
